<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd     
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
 
	<!-- 注解版本的 MVC配置 -->
	<context:component-scan
		base-package="com.tarena"/>
	
	<util:properties id="jdbc" 
		location="classpath:db.properties"/>
	<!-- 配置数据库连接池 dataSource-->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" 
			value="#{jdbc.driver}" />
		<property name="url" 
			value="#{jdbc.url}" />
		<property name="username" 
			value="#{jdbc.user}" />
		<property name="password" 
			value="#{jdbc.pwd}" />
		<property name="maxActive" 
			value="#{jdbc.maxPoolSize}" />
		<property name="minIdle" 
			value="#{jdbc.minPoolSize}" />
	</bean>
 	<!-- MyBatis - Spring -->
 	<!-- SqlSessionFactoryBean 创建的Bean
 	是sqlSessionFactory 的对象 -->
 	<bean id="sqlSessionFactory"
 		class="org.mybatis.spring.SqlSessionFactoryBean">
 		<property name="dataSource" 
 			ref="dataSource" />
 		<property name="mapperLocations" 
 			value="classpath:com/tarena/entity/*.xml" />
 	</bean>
 	<bean id="sqlSession" scope="prototype"
 		factory-bean="sqlSessionFactory"
 		factory-method="openSession">
 	</bean>
 	<!-- 管理Mapper接口的实例 
 	1 必须注入 sqlSessionFactory 对象
 	2 必须设置 被创建的Mapper接口名
 	3 MapperFactoryBean 按照接口名创建对象-->
 	<!-- 
 	<bean id="deptMapper"
 		class="org.mybatis.spring.mapper.MapperFactoryBean">
 		<property name="sqlSessionFactory" 
 			ref="sqlSessionFactory" />
 		<property name="mapperInterface" 
 			value="com.tarena.entity.DeptMapper" />
 	</bean>  -->
 	<!-- 自动扫描com.tarena包和子包，将所有
 	扫描到的Mapper接口都创建问Bean对象 -->
 	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
 		<property name="basePackage" 
 			value="com.tarena" />
 		<property name="annotationClass" 
 			value="com.tarena.entity.MapperBean" />
 	</bean>
 	
 	<!-- 配置SqlSessionTemplate -->
 	<bean id="sqlSessionTemplate"
 		class="org.mybatis.spring.SqlSessionTemplate">  
      <constructor-arg index="0" 
      	ref="sqlSessionFactory"/>
	</bean> 
 	
 	<bean 
 		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
 		<property name="prefix" 
 			value="/WEB-INF/jsp/" />
 		<property name="suffix" 
 			value=".jsp" />
 	</bean>
 	<mvc:annotation-driven/>
 
</beans>












